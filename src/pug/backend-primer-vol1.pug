extends /layout/_application

prepend Config
  - title = 'バックエンド入門コース Vol.1'
  // Awesome Online IDE
  // https://ide.ceriously.com/
  // https://glot.io/
  // https://codeanywhere.com/editor/#
  // https://qiita.com/poly_soft/items/fb649573c19b7a5c0227
  // https://www.itbook.info/study/p36.html
  //
  // TODO:
  //   gitの説明強化 https://www.slideshare.net/matsukaz/git-17499005
  //   codeanywhereの使い方追加
block content
  section.bg-red
    span.background.dark(style="background-image:url('https://source.unsplash.com/R1J6Z1cnJZc/1600x800')")
    // .wrap = container (width: 90%)
    .wrap.aligncenter
      h1
        strong バックエンドエンジニア入門コース Vol.1
      h5.text-symbols https://bit.ly/2Oegin3
    // .end .wrap
  section
    // .wrap = container (width: 90%)
    .wrap.size-70
      h2
        strong Agenda
      hr
      ol.text-cols
        li トレーニング概要
        li TRUNKとは
        li 自己紹介
        li スキル領域と役割
        li Web概論
        li Quick Start with Rails
        li Ruby概論
        li Rails概論
        li ハンズオンズ (HTML編集)
    // .end .wrap
    // http://www.dt30.net/gachinko/?p=1008
    // https://chiefmartec.com/post_images/marketing_technology_landscape.jpg
  section.bg-green
    span.background.dark(style="background-image:url('https://images.unsplash.com/photo-1535219241072-7d3c28a49a5c')")
    // .wrap = container (width: 90%)
    .wrap.aligncenter.fadeInUp
      h3
        strong トレーニング概要
    // .end .wrap
  section.slide-top
    // .wrap = container (width: 90%)
    .wrap
      div
        h1 Twitterクローンを作成しよう
      div(style="margin-top: 45px;")
        h3(style="font-weight: bold;") Day1
        p
          | Rails環境の立ち上げから簡単なHTML編集まで行います。
          ol
            li Web概論
            li Ruby/Rails概論
            li Git基礎
            li HTML基礎
          img(src="./images/backend-primer/tw-capture.png")
      div(style="margin-top: 45px;")
        h3(style="font-weight: bold;") Day2
        p
          | Userの登録機能を作成します
          ol
            li データベース基礎
            li MVCフレームワーク / ORマッパー解説
            li 組み込み
          img(src="./images/backend-primer/sign-up.png")
      div(style="margin-top: 45px;")
        h3(style="font-weight: bold;") Day3
        p
          | Tweet機能をデータベース設計からModel View Controllerなどを一通り作成します
          ol
            li データーベース設計
            li Rails概論
          img(src="./images/backend-primer/timeline.png")
  section.bg-green
    span.background.dark(style="background-image:url('./images/cover/0.jpg')")
    // .wrap = container (width: 90%)
    .wrap.aligncenter.fadeInUp
      h3
        strong TRUNKとは
    // .end .wrap
  section.slide-top
    iframe(src="https://docs.google.com/presentation/d/e/2PACX-1vQn-Bh21l-m5bNi52n09dlQm1iS4lAbJkAdYa0QQ1T8VVHpummahqjw-pxXEJa-sbCyB6WfaT8P7-bB/embed?start=false&loop=false&delayms=3000" frameborder="0" width="1440" height="839" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;")
  section.fullscreen
    span.background.dark(style="background-image:url('./images/cover/profile.png'); width: 60%; height: 120%; top: 50%; left: 50%; transform: translate(-50%, -50%); opacity: .4;")
    h2(style="position: relative; font-weight: bold;") WHAT I'M ABOUT
    p(style="position: relative; font-weight: bold;")
      | 株式会社TRUNK TL Kawasaki Atsushi<br>
      | 2013年じげんグループHRメディア事業のPMやバックエンドを担当。<br>
      | 新規事業立ち上げの経験を経てエンジニアリングユニットのマネージャーに従事。<br>
      |
      | 2015年に株式会社カヤックへ入社。<br>
      | クライアントワークや自社サービス(Lobi)のフロントエンド、バックエンドおよびインフラ設計、構築、運用を担当。<br>
  section.bg-green
    span.background.dark(style="background-image:url('https://images.unsplash.com/photo-1535219241072-7d3c28a49a5c')")
    // .wrap = container (width: 90%)
    .wrap.aligncenter.fadeInUp
      h3
        strong バックエンドエンジニアのスキル領域と役割
    // .end .wrap
  section.slide-top
    h3 エンジニアの職種とは?
    ul
      li バックエンドエンジニア
      li インフラエンジニア
      li フロントエンドエンジニア
      li ネイティブエンジニア
    div(style="margin-top: 45px;")
      h4 バックエンドエンジニア
      p(style="max-width: 800px;")
        | バックエンドエンジニアの役割はサービスの土台を作ることになります。
        | クライアントからのリクエストを受け付け、リクエスト別にデータベースへの読み書きを行い、最終的にクライアントに要求されたデータを返す処理を実装します。
      h4 インフラエンジニア
      p(style="max-width: 800px;")
        | インフラエンジニアの役割はサービスのインフラ構成や監視機能の構築がメインになります。SREとも最近呼ばれています。
        | 最近ではAWSやGCPなどのクラウド環境が台頭してきたこともあり、サーバーサイドエンジニアがインフラ構築をすることが多くなってきているのが現状です。
      h4 フロントエンドエンジニア
      p(style="max-width: 800px;")
        | フロントエンドエンジニアの役割はサービスの見た目を作ることです。
        | デザイナーが作ったホームページやサービスのデザインをHTMLやCSS、Javascriptを駆使して実現することと、サーバーへリクエストを実行し、必要な情報の取得と表示を行います。
      h4 ネイティブエンジニア
      p(style="max-width: 800px;")
        | ネイティブエンジニアの役割はiOSアプリ、Androidアプリの実装になります。
      small
        | 参考:
        a(target="_blank" href="https://tomokazu-kozuma.com/things-to-learn-and-necessary-skills-by-engineers-job-category/") https://tomokazu-kozuma.com/things-to-learn-and-necessary-skills-by-engineers-job-category/
  section.bg-dark
    span.background.dark(style="background-image:url('./images/cover/mercari.png')")
    // .wrap = container (width: 90%)
    .wrap.aligncenter.fadeInUp
      h3
        strong 例
  section
    span.background(style="background-image:url('./images/cover/mercari2.png')")
  section
    span.background(style="background-image:url('./images/cover/mercari3.png')")
  section.slide-top
    h3 スキル領域
    ul
      li アプリケーション層プロトコル (HTTP DHCP SMTP)
      li プログラミング言語 (コンパイラ型: Golang Java, インタプリタ型: Perl Ruby Python)
      li データベース設計
      li Webセキュリティ
    img(src="./images/backend-primer/68747470733a2f2f692e696d6775722e636f6d2f4f5a554f5574492e706e67.png" width="1200")
    img(src="./images/backend-primer/backend.png" width="1200")
    small
      | 参考 
      a(target="_blank" href="https://github.com/kamranahmedse/developer-roadmap" width="680") https://github.com/kamranahmedse/developer-roadmap

  section.slide-top
    h3 年収
    img(src="./images/backend-primer/img_50c49d1c11ba86d08c144c30f53196a0504446.jpg" width="680")
    small
      | 参考:
      a(target="_blank" href="https://toyokeizai.net/articles/-/212579?page=3" width="680") https://toyokeizai.net/articles/-/212579?page=3

  section.bg-green
    span.background.dark(style="background-image:url('./images/cover/1.jpg')")
    // .wrap = container (width: 90%)
    .wrap.aligncenter.fadeInUp
      h3
        strong Web概論
    // .end .wrap
  section.slide-top
    .wrap
      div
        h3 World Wide Web
        p
          | World Wide Web（ワールド・ワイド・ウェブ、略名：WWW）とは、インターネット上で提供されるハイパーテキストシステム。Web、ウェブ、W3（ダブリュー スリー）[1]とも呼ばれる。俗には「インターネット」という表現がワールド・ワイド・ウェブを指す場合もある。
        small
          | wikipedia:
          a(href="https://ja.wikipedia.org/wiki/World_Wide_Web") https://ja.wikipedia.org/wiki/World_Wide_Web
        img(src="./images/backend-primer/WorldWideWebAroundWikipedia.png")
  section
    // .wrap = container (width: 90%)
    .wrap
      .grid.vertical-align
        .column
          h3
            strong Flow
        .column
          p.text-intro
            strong 1.DNSルックアップ
            br
            strong 2.HTMLダウンロード(TCP3 way handshake)
            br
            strong 3.サブリソースダウンロード
            br
            strong 4.レンダリング
            br
  section.slide-top
    .wrap
      div
        h3 リクエストメソッド
        h4 GET
        img(src="./images/backend-primer/url.png")
        ul
          li HTTP通信で、サーバから情報を取得してくる時に使用する
          li 他人に見られたくない情報は、GETでは送らない（後述する）
          li 送信できるデータ量に制限がある

    .wrap(style="margin-top: 90px;")
        h4 POST
        ul
          li HTTP通信で、サーバへ情報を登録する時に使用する（データベースへの格納など）
          li データ量が多い場合（GETでのデータ送信量制限を超えてしまう場合）
          li バイナリデータを送信したい場合
          li 他の人に見られたくない情報を送る場合（パスワードなど）
        h5 POSTでのサーバからクライアントへのリクエスト例
        code
          pre
            | POST /hoge/ HTTP/1.1
            | Host: localhost:8080
            | Connection: keep-alive
            | Content-Length: 22
            | Cache-Control: max-age=0
            | Origin: http://localhost:8080
            | Upgrade-Insecure-Requests: 1
            | User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.36
            | Content-Type: application/x-www-form-urlencoded
            | Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
            | Referer: http://localhost:8080/hoge/
            | Accept-Encoding: gzip, deflate, br
            | Accept-Language: ja,en-US;q=0.8,en;q=0.6
            | 
            | name=hoge&comment=hoge
  section.slide-top
    .wrap
      div
        h3 レスポンス (ステータスコード)
        p
          | 通信の際、クライアントのリクエストに対して、サーバがどんな状態かを知らせる
        table
          thead
            tr
              th コード
              th 意味
              th 状態
          tbody
            tr
              td 200
              td OK (リクエスト成功)
              td 『正常に応答しました！』
            tr
              td 403
              td Forbidden
              td アクセス権限がない
            tr
              td 404
              td Not Found
              td 『リソースがありません！』 例：ページが存在しない
            tr
              td 500
              td Internal Server Error
              td 障害発生中
        small
          | 参照:
          a(href="http://www.webnote.info/internet/" target="_blank") http://www.webnote.info/internet/
  section.bg-green
    span.background.dark(style="background-image:url('https://images.unsplash.com/photo-1535219241072-7d3c28a49a5c')")
    // .wrap = container (width: 90%)
    .wrap.aligncenter.fadeInUp
      h3
        strong Quick Start with Rails
    // .end .wrap
  section.slide-top
    // .wrap = container (width: 90%)
    .wrap
      h3 Tools
      ol(style="font-size: 30px;")
        li(style="margin-bottom: 30px;")
          a(href="https://codeanywhere.com/") Codeanywhere
        li
          a(href="github.com") Github
  section.slide-top
    // .wrap = container (width: 90%)
    .wrap
      h3 Codeanywhere
      p
        | Meet your new go-to development environment
      h4 プロジェクトの新規作成
      img(src="./images/backend-primer/codeanywhere/1.png")
      h4 プロジェクトの設定
      img(src="./images/backend-primer/codeanywhere/2.png")
      img(src="./images/backend-primer/codeanywhere/3.png")
      img(src="./images/backend-primer/codeanywhere/4.png")
  section.slide-top
    // .wrap = container (width: 90%)
    .wrap
      h3 CLI(Command Line Interface)
      p ユーザに対する情報の表示を文字によって行い、全ての操作はキーボードを用いて行うユーザイーンターフェースのこと
      img(src="./images/backend-primer/codeanywhere/5.png")
      h5 コマンド一例
      table
        thead
          tr
            th コマンド
            th 説明
            th 使用例
        tbody
          tr
            td cd
            td ディレクトリ（フォルダ）移動
            td cd 移動したいフォルダ名
          tr
            td ls
            td フォルダの内容をリスト形式で表示する
            td 中身をみたいフォルダに移動して、ls
          tr
            td mv
            td ファイルを移動
            td mv (移動元ファイル名/フォルダ名) (移動先ファイル名/フォルダ名)
          tr
            td cp
            td ファイルやフォルダをコピーする
            td cp (移動元ファイル名/フォルダ名) (移動先ファイル名/フォルダ名)
          tr
            td mkdir
            td フォルダを作成する
            td mkdir フォルダ名
          tr
            td rm
            td ファイルやフォルダを削除する
            td rm ファイル名/フォルダ名
      small
        | 参考:
        a(href="http://www.redout.net/data/command.html") http://www.redout.net/data/command.html
  section.slide-top
    // .wrap = container (width: 90%)
    .wrap
      h3 環境セットアップ
      h5 rubyのアップデート
      code
        pre
          | # 最新のrubyバージョン取得
          | rvm get head
          | # インストール可能なバージョン一覧表示
          | rvm list known
          | # 2.4をインストール
          | rvm install 2.4
          | # インストール済みのバージョンを表示
          | rvm list
          | # インストールした2.4のrubyを使用
      video(src="./images/backend-primer/rmv.mp4" controls)
          | rvm --default use ruby-2.4.4
          | # 現在のrubyバージョンの表示
          | ruby -v
          | # パッケージマネージャーの表示
          | gem install bundler
  section.slide-top
    // .wrap = container (width: 90%)
    .wrap
      h3 プロジェクトのCheckout
      h5 Gitとは?
      p
        | gitは、プログラムのソースコードなどの変更履歴を記録・追跡するための分散型バージョン管理システムである。Linuxカーネルのソースコード管理に用いるためにリーナス・トーバルズによって開発され、それ以降ほかの多くのプロジェクトで採用されている。 <br>
        | gitでは、各ユーザのワーキングディレクトリに、全履歴を含んだリポジトリの完全な複製が作られる。したがって、ネットワークにアクセスできないなどの理由で中心リポジトリにアクセスできない環境でも、履歴の調査や変更の記録といったほとんどの作業を行うことができる。これが「分散型」と呼ばれる理由である。
      small 参考
        a(href="https://ja.wikipedia.org/wiki/Git") https://ja.wikipedia.org/wiki/Git
      h5 Githubとは?
      p
        | GitHubは、Gitの仕組みを利用して、世界中の人々が自分の作品(プログラムコードやデザインデータなど)を保存、公開することができるようにしたウェブサービスの名称
      h5 Gitコマンド一例
      table
        thead
          tr
            th コマンド
            th 説明
        tbody
          tr
            td git add (ファイル名) or git add .
            td ステージングエリアに追加
          tr
            td git commit -m "コミット名"
            td ステージングの内容を、ローカルリポジトリに登録
          tr
            td git push origin  (ブランチ名)
            td ローカルリポジトリの内容を、リモートリポジトリに反映させる
          tr
            td git status
            td 変更ファイルの確認
          tr
            td git diff
            td 変更内容の確認
      small
        a(href="https://qiita.com/kohga/items/dccf135b0af395f69144") https://qiita.com/kohga/items/dccf135b0af395f69144
      h5 クローンするリポジトリ
      code
        pre
          | git clone https://github.com/pocke777/twwwitter-clone-rails
      img(src="./images/backend-primer/codeanywhere/6.png")

  section.slide-top
    // .wrap = container (width: 90%)
    .wrap
      h3 サーバーの立ち上げ
      h5 依存ライブラリのインストール
      code
        pre
          | cd twwwitter-clone-rails
          | bundle install
      img(src="./images/backend-primer/codeanywhere/7.png")
      h5 Railsコマンドでサーバー起動 🎉🎉🎉
      code
        pre
          | bin/rails db:migrate
          | bin/rails s -b 0.0.0.0
      img(src="./images/backend-primer/codeanywhere/8.png")

  section.bg-green
    span.background.dark(style="background-image:url('https://images.unsplash.com/photo-1535219241072-7d3c28a49a5c')")
    // .wrap = container (width: 90%)
    .wrap.aligncenter.fadeInUp
      h3
        strong Ruby概論
    // .end .wrap
  section.slide-top
    // .wrap = container (width: 90%)
    h3 Rubyとは?
    p
      | まつもとゆきひろ氏により開発されたオブジェクト指向スクリプト言語です。<br>
      | 可読性を重視した構文となっている。Ruby においては整数や文字列なども含めデータ型はすべてがオブジェクトであり、純粋なオブジェクト指向言語といえる。<br>
    small wiki:
      a(href="https://ja.wikipedia.org/wiki/Ruby") https://ja.wikipedia.org/wiki/Ruby
    h3(style="margin-top: 80px;") 動かしてみよう
    p
      a(href="https://repl.it/@pocke777/JudiciousTraumaticCores" target="_blank") https://repl.it/@pocke777/JudiciousTraumaticCores


    h3(style="margin-top: 80px;") Gemとは?
    p
      | RubyGemsは、Ruby言語用のパッケージ管理システムであり、Rubyのプログラムと（"gem" と呼ばれる）ライブラリの配布用標準フォーマットを提供している。gemを容易に管理でき、gemを配布するサーバの機能も持つ。Rubyバージョン1.9以降では標準ライブラリの一部となっている。
    small wiki:
      a(href="https://ja.wikipedia.org/wiki/RubyGems") https://ja.wikipedia.org/wiki/RubyGems

  section.bg-green
    span.background.dark(style="background-image:url('https://images.unsplash.com/photo-1535219241072-7d3c28a49a5c')")
    // .wrap = container (width: 90%)
    .wrap.aligncenter.fadeInUp
      h3
        strong Rails概論
    // .end .wrap
  section.slide-top
    // .wrap = container (width: 90%)
    h3 Ruby on Railsとは?
    p
      | Ruby on Rails（ルビーオンレイルズ）は、オープンソースのWebアプリケーションフレームワークである。RoRまたは単にRailsと呼ばれる。その名にも示されているようにRubyで書かれている。
      | またModel View Controller（MVC）アーキテクチャに基づいて構築されている。
    small wiki:
      a(href="https://ja.wikipedia.org/wiki/Ruby_on_Rails" target="_blank") https://ja.wikipedia.org/wiki/Ruby_on_Rails

    h4(style="margin-top: 80px;") Model, View, Controllerについて
    h4 Model (モデル)
    p
      pre
        | 一般的にはビジネスロジックといわれているが、実態はだいたいの場合データベース処理を担う。
    h4 View (ビュー)
    p
      pre
        | 表示内容生成部分。いわゆる HTML 部分と思っておけば良い。
    h4 Controller (コントローラ)
    p
      pre
        | ユーザからのリクエストを処理するもの。処理といっても複雑な処理はここではしない。 複雑な処理は Model に委譲し、その結果を表示する HTML (等)を生成するために View を用いる。

    img(src="./images/backend-primer/010_hello-mvc.png" width="800")

    h4(style="margin-top: 80px;") ルート設定
    img(src="./images/backend-primer/010_hello-routing.png" width="800")
    small
      a(href="https://aspnet-mvc.clock-up.jp/contents/quick/hello-mvc" target="_blank") https://aspnet-mvc.clock-up.jp/contents/quick/hello-mvc

  section.bg-green
    span.background.dark(style="background-image:url('https://images.unsplash.com/photo-1535219241072-7d3c28a49a5c')")
    // .wrap = container (width: 90%)
    .wrap.aligncenter.fadeInUp
      h3
        strong Railsハンズオンズ (HTML編集)
    // .end .wrap
  section.slide-top
    // .wrap = container (width: 90%)
    h2 ルーティングを確認してリンクを繋いでみよう
