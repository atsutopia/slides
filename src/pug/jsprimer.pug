extends /layout/_application

block content
  section.bg-red
    span.background.dark(style="background-image:url('https://source.unsplash.com/R1J6Z1cnJZc/1600x800')")
    .wrap.aligncenter
      h1
        strong JavaScript Primer
      p.text-symbols * * *
  section
    .wrap.size-70
      h2
        strong Agenda
      hr
      ol.text-cols
        li トレーニング概要
        li 自己紹介
        li プラットフォーム
        li Javascripイントロダクション
        li 実践Javascript
  section.bg-green
    span.background.dark(style="background-image:url('https://images.unsplash.com/photo-1535219241072-7d3c28a49a5c')")
    .wrap.aligncenter.fadeInUp
      h3
        strong トレーニング概要
  section.slide-top
    h2 Javascrip基礎
    img(src="./images/jsprimer/chara.gif")
  section.bg-green
    span.background.dark(style="background-image:url('https://images.unsplash.com/photo-1535219241072-7d3c28a49a5c')")
    .wrap.aligncenter.fadeInUp
      h3
        strong 自己紹介
  section.fullscreen
    span.background.dark(style="background-image:url('./images/cover/profile.png'); width: 60%; height: 120%; top: 50%; left: 50%; transform: translate(-50%, -50%); opacity: .4;")
    h2(style="position: relative; font-weight: bold;") WHAT I'M ABOUT
    p(style="position: relative; font-weight: bold;")
      | 株式会社TRUNK TL Kawasaki Atsushi<br>
      | 2013年じげんグループHRメディア事業のPMやバックエンドを担当。<br>
      | 新規事業立ち上げの経験を経てエンジニアリングユニットのマネージャーに従事。<br>
      |
      | 2015年に株式会社カヤックへ入社。<br>
      | クライアントワークや自社サービス(Lobi)のフロントエンド、バックエンドおよびインフラ設計、構築、運用を担当。<br>
  section.bg-green
    span.background.dark(style="background-image:url('https://images.unsplash.com/photo-1535219241072-7d3c28a49a5c')")
    .wrap.aligncenter.fadeInUp
      h3
        strong プラットフォーム

  section.slide-top
    img(src="./images/jsprimer/frontend.svg")
  section.slide-top
    img(src="./images/jsprimer/bff.svg")
  section.bg-green
    span.background.dark(style="background-image:url('https://images.unsplash.com/photo-1535219241072-7d3c28a49a5c')")
    .wrap.aligncenter.fadeInUp
      h3
        strong Case Study
  section.slide-top
    .wrap.aligncenter.fadeInUp
      h3 SPA
      a(href="https://www.airbnb.jp/" target="_blank")
        img(src="./images/jsprimer/airbnb.png")
  section.slide-top
    .wrap.aligncenter.fadeInUp
      h3 WebGL
      a(href="https://marmont.gucci.com/" target="_blank")
        img(src="./images/jsprimer/webgl.png")
  section.slide-top
    .wrap.aligncenter.fadeInUp
      h3 Canvas2D
      a(href="https://touguezeur-effect.com/" target="_blank")
        img(src="./images/jsprimer/2d.png")
  section.slide-top
    .wrap.aligncenter.fadeInUp
      h3 WebSocket
      a(href="https://app.slack.com/client/T0RN7TD9R/C0T0894NQ" target="_blank")
        img(src="./images/jsprimer/slack.png")

  section.bg-green
    span.background.dark(style="background-image:url('https://images.unsplash.com/photo-1535219241072-7d3c28a49a5c')")
    .wrap.aligncenter.fadeInUp
      h3
        strong Javascripイントロダクション
  section.slide-top
    h2 Javascripの特徴
    ul
      li スクリプト言語
      li 動的型付け
      li Netscape,Incが開発
      li 非同期処理
  section.slide-top
    h2 Javascripエンジン
    ul
      li Chrome: V8 (V8はNode.jsでも利用されている)
      li Safari: JavaScriptCore
      li Firefox: SpiderMonkey
  section.slide-top
    h2 スクリプト言語
    p
      | JavaScript や他の高レベルのプログラミング言語は機械語への翻訳が必要
      | プログラミングでは、機械語に翻訳するには一般的に 2 つの方法がある
      | １つはインタープリタで、この翻訳は直ちに一行一行実施します
    img(src="https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2017/02/02-02-interp02.png" width="800")
    p
      | 一方コンパイラは直ちに翻訳を行いません。翻訳を作成して、それを書きとめるために、事前に動作する
    img(src="https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2017/02/02-03-compile02.png" width="800")

    h3 インタープリタの長所と短所
    p
      | インタープリタはすぐに起動して実行可能
      | ただし、実行速度は翻訳しないといけない分、遅くなる
    h3 コンパイラの長所と短所
    p
      | 予め翻訳してあるため、実行速度が速くなる。
      | また、翻訳時のエラーは事前に気づくことができる。
      | ただし、全てを翻訳するため起動に少し時間がかかる。
    h3 JITコンパイラ
    p
      | インタプリタの非効率性を取り除き、
      | すぐに起動して実行可能かつ、早い実効速度を実現
      |
  section.bg-green
    span.background.dark(style="background-image:url('https://images.unsplash.com/photo-1535219241072-7d3c28a49a5c')")
    .wrap.aligncenter.fadeInUp
      h3
        strong 実践Javascrip
  section.slide-top
    h2 連番画像を使ってアニメーションを作成しよう
    img(src="./images/jsprimer/chara.gif" width="400")
  section.slide-top
    h2  要件
    ul
      li あらかじめ用意された連番画像を利用してアニメーションを実装
      li 各フレームは100 ~ 500milliseconds程度で切り替える
      li 画像の読み込み時間は100milliseconds以内の想定でよいが、フレーム挿入時に読み込みは完了しておくこと (すべてをあらかじめロードする必要はない)
    h3 雛形のソースコードはこちら
    [sprite-animation](https://github.com/atsutopia/sprite-animation)
  section.slide-top
    h2  ヒント
    ul
      li DOMはすでに用意しているimgタグを利用する
      li 非同期処理はPromiseを利用する
      li Imageインスタンスを利用すれば読み込みのハンドリングは可能
      li フレーム間隔のハンドリングはsetTimeoutで行う
